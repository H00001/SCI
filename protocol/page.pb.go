// Code generated by protoc-gen-go. DO NOT EDIT.
// source: page.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PageInbound struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageInbound) Reset()         { *m = PageInbound{} }
func (m *PageInbound) String() string { return proto.CompactTextString(m) }
func (*PageInbound) ProtoMessage()    {}
func (*PageInbound) Descriptor() ([]byte, []int) {
	return fileDescriptor_f14a105a5ef2e917, []int{0}
}

func (m *PageInbound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageInbound.Unmarshal(m, b)
}
func (m *PageInbound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageInbound.Marshal(b, m, deterministic)
}
func (m *PageInbound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageInbound.Merge(m, src)
}
func (m *PageInbound) XXX_Size() int {
	return xxx_messageInfo_PageInbound.Size(m)
}
func (m *PageInbound) XXX_DiscardUnknown() {
	xxx_messageInfo_PageInbound.DiscardUnknown(m)
}

var xxx_messageInfo_PageInbound proto.InternalMessageInfo

func (m *PageInbound) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type PageOutbound struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageOutbound) Reset()         { *m = PageOutbound{} }
func (m *PageOutbound) String() string { return proto.CompactTextString(m) }
func (*PageOutbound) ProtoMessage()    {}
func (*PageOutbound) Descriptor() ([]byte, []int) {
	return fileDescriptor_f14a105a5ef2e917, []int{1}
}

func (m *PageOutbound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageOutbound.Unmarshal(m, b)
}
func (m *PageOutbound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageOutbound.Marshal(b, m, deterministic)
}
func (m *PageOutbound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageOutbound.Merge(m, src)
}
func (m *PageOutbound) XXX_Size() int {
	return xxx_messageInfo_PageOutbound.Size(m)
}
func (m *PageOutbound) XXX_DiscardUnknown() {
	xxx_messageInfo_PageOutbound.DiscardUnknown(m)
}

var xxx_messageInfo_PageOutbound proto.InternalMessageInfo

func (m *PageOutbound) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*PageInbound)(nil), "protocol.PageInbound")
	proto.RegisterType((*PageOutbound)(nil), "protocol.PageOutbound")
}

func init() {
	proto.RegisterFile("page.proto", fileDescriptor_f14a105a5ef2e917)
}

var fileDescriptor_f14a105a5ef2e917 = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x48, 0x4c, 0x4f,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39, 0x4a, 0xea, 0x5c,
	0xdc, 0x01, 0x89, 0xe9, 0xa9, 0x9e, 0x79, 0x49, 0xf9, 0xa5, 0x79, 0x29, 0x42, 0x12, 0x5c, 0xec,
	0xc9, 0xf9, 0x79, 0x25, 0xa9, 0x79, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae,
	0x92, 0x06, 0x17, 0x0f, 0x48, 0xa1, 0x7f, 0x69, 0x09, 0x01, 0x95, 0x46, 0xf6, 0x5c, 0x2c, 0x20,
	0x95, 0x42, 0xe6, 0x5c, 0x6c, 0x29, 0xf9, 0x2e, 0xf9, 0xe5, 0x79, 0x42, 0xa2, 0x7a, 0x30, 0xfb,
	0xf4, 0x90, 0x2c, 0x93, 0x12, 0x43, 0x15, 0x86, 0x19, 0x9d, 0xc4, 0x06, 0x16, 0x36, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0xf6, 0xc9, 0x9b, 0xaf, 0xb2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PageClient is the client API for Page service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PageClient interface {
	DoDown(ctx context.Context, in *PageInbound, opts ...grpc.CallOption) (*PageOutbound, error)
}

type pageClient struct {
	cc grpc.ClientConnInterface
}

func NewPageClient(cc grpc.ClientConnInterface) PageClient {
	return &pageClient{cc}
}

func (c *pageClient) DoDown(ctx context.Context, in *PageInbound, opts ...grpc.CallOption) (*PageOutbound, error) {
	out := new(PageOutbound)
	err := c.cc.Invoke(ctx, "/protocol.Page/doDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PageServer is the server API for Page service.
type PageServer interface {
	DoDown(context.Context, *PageInbound) (*PageOutbound, error)
}

// UnimplementedPageServer can be embedded to have forward compatible implementations.
type UnimplementedPageServer struct {
}

func (*UnimplementedPageServer) DoDown(ctx context.Context, req *PageInbound) (*PageOutbound, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoDown not implemented")
}

func RegisterPageServer(s *grpc.Server, srv PageServer) {
	s.RegisterService(&_Page_serviceDesc, srv)
}

func _Page_DoDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageInbound)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PageServer).DoDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Page/DoDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PageServer).DoDown(ctx, req.(*PageInbound))
	}
	return interceptor(ctx, in, info, handler)
}

var _Page_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.Page",
	HandlerType: (*PageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "doDown",
			Handler:    _Page_DoDown_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "page.proto",
}
